//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18051
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySetsFCFA503A7DE6228E03071D0600CCE713949C532EF971CE36C3CB340B3B647724))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySetsFCFA503A7DE6228E03071D0600CCE713949C532EF971CE36C3CB340B3B647724 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySetsFCFA503A7DE6228E03071D0600CCE713949C532EF971CE36C3CB340B3B647724()
        {
            this.EdmEntityContainerName = "InfocenterEntities";
            this.StoreEntityContainerName = "InfocenterModelStoreContainer";
            this.HashOverMappingClosure = "dbd848280100fe45fa826c50a46f092b62a9c60416c7e4af8d6f3ed52be09ea2";
            this.HashOverAllExtentViews = "4862e445ef25bb162de570f925a396d1824b2dd1b8f27a9dbfcef2325e30c7db";
            this.ViewCount = 10;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for InfocenterModelStoreContainer.DetailTextDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterModelStoreContainer.DetailTextDB", @"
    SELECT VALUE -- Constructing DetailTextDB
        [InfocenterModel.Store.DetailTextDB](T1.DetailTextDB_ID, T1.DetailTextDB_Path, T1.DetailTextDB_Text, T1.DetailTextDB_RTFText, T1.DetailTextDB_ModifyTime)
    FROM (
        SELECT 
            T.ID AS DetailTextDB_ID, 
            T.Path AS DetailTextDB_Path, 
            T.Text AS DetailTextDB_Text, 
            T.RTFText AS DetailTextDB_RTFText, 
            T.ModifyTime AS DetailTextDB_ModifyTime, 
            True AS _from0
        FROM InfocenterEntities.DetailTextDBs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterEntities.DetailTextDBs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterEntities.DetailTextDBs", @"
    SELECT VALUE -- Constructing DetailTextDBs
        [InfocenterModel.DetailTextDB](T1.DetailTextDB_ID, T1.DetailTextDB_Path, T1.DetailTextDB_Text, T1.DetailTextDB_RTFText, T1.DetailTextDB_ModifyTime)
    FROM (
        SELECT 
            T.ID AS DetailTextDB_ID, 
            T.Path AS DetailTextDB_Path, 
            T.Text AS DetailTextDB_Text, 
            T.RTFText AS DetailTextDB_RTFText, 
            T.ModifyTime AS DetailTextDB_ModifyTime, 
            True AS _from0
        FROM InfocenterModelStoreContainer.DetailTextDB AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterModelStoreContainer.DiskFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterModelStoreContainer.DiskFile", @"
    SELECT VALUE -- Constructing DiskFile
        [InfocenterModel.Store.DiskFile](T1.DiskFile_ID, T1.DiskFile_FilePath, T1.DiskFile_FileSize, T1.DiskFile_FileContent, T1.DiskFile_AddTime)
    FROM (
        SELECT 
            T.ID AS DiskFile_ID, 
            T.FilePath AS DiskFile_FilePath, 
            T.FileSize AS DiskFile_FileSize, 
            T.FileContent AS DiskFile_FileContent, 
            T.AddTime AS DiskFile_AddTime, 
            True AS _from0
        FROM InfocenterEntities.DiskFiles AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterModelStoreContainer.FolderDB
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterModelStoreContainer.FolderDB", @"
    SELECT VALUE -- Constructing FolderDB
        [InfocenterModel.Store.FolderDB](T1.FolderDB_ID, T1.FolderDB_Path, T1.FolderDB_Text, T1.FolderDB_RTFText, T1.FolderDB_ModifyTime)
    FROM (
        SELECT 
            T.ID AS FolderDB_ID, 
            T.Path AS FolderDB_Path, 
            T.Text AS FolderDB_Text, 
            T.RTFText AS FolderDB_RTFText, 
            T.ModifyTime AS FolderDB_ModifyTime, 
            True AS _from0
        FROM InfocenterEntities.FolderDBs AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterModelStoreContainer.FolderAndFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterModelStoreContainer.FolderAndFile", @"
    SELECT VALUE -- Constructing FolderAndFile
        [InfocenterModel.Store.FolderAndFile](T1.FolderAndFile_FolderID, T1.FolderAndFile_FileID)
    FROM (
        SELECT 
            Key(T.FolderDB).ID AS FolderAndFile_FolderID, 
            Key(T.DiskFile).ID AS FolderAndFile_FileID, 
            True AS _from0
        FROM InfocenterEntities.FolderAndFile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterEntities.DiskFiles
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterEntities.DiskFiles", @"
    SELECT VALUE -- Constructing DiskFiles
        [InfocenterModel.DiskFile](T1.DiskFile_ID, T1.DiskFile_FilePath, T1.DiskFile_FileSize, T1.DiskFile_FileContent, T1.DiskFile_AddTime)
    FROM (
        SELECT 
            T.ID AS DiskFile_ID, 
            T.FilePath AS DiskFile_FilePath, 
            T.FileSize AS DiskFile_FileSize, 
            T.FileContent AS DiskFile_FileContent, 
            T.AddTime AS DiskFile_AddTime, 
            True AS _from0
        FROM InfocenterModelStoreContainer.DiskFile AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterEntities.FolderDBs
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterEntities.FolderDBs", @"
    SELECT VALUE -- Constructing FolderDBs
        [InfocenterModel.FolderDB](T1.FolderDB_ID, T1.FolderDB_Path, T1.FolderDB_Text, T1.FolderDB_RTFText, T1.FolderDB_ModifyTime)
    FROM (
        SELECT 
            T.ID AS FolderDB_ID, 
            T.Path AS FolderDB_Path, 
            T.Text AS FolderDB_Text, 
            T.RTFText AS FolderDB_RTFText, 
            T.ModifyTime AS FolderDB_ModifyTime, 
            True AS _from0
        FROM InfocenterModelStoreContainer.FolderDB AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterEntities.FolderAndFile
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterEntities.FolderAndFile", @"
    SELECT VALUE -- Constructing FolderAndFile
        [InfocenterModel.FolderAndFile](T3.FolderAndFile_DiskFile, T3.FolderAndFile_FolderDB)
    FROM (
        SELECT -- Constructing DiskFile
            CreateRef(InfocenterEntities.DiskFiles, row(T2.FolderAndFile_DiskFile_ID), [InfocenterModel.DiskFile]) AS FolderAndFile_DiskFile, 
            T2.FolderAndFile_FolderDB
        FROM (
            SELECT -- Constructing FolderDB
                T1.FolderAndFile_DiskFile_ID, 
                CreateRef(InfocenterEntities.FolderDBs, row(T1.FolderAndFile_FolderDB_ID), [InfocenterModel.FolderDB]) AS FolderAndFile_FolderDB
            FROM (
                SELECT 
                    T.FileID AS FolderAndFile_DiskFile_ID, 
                    T.FolderID AS FolderAndFile_FolderDB_ID, 
                    True AS _from0
                FROM InfocenterModelStoreContainer.FolderAndFile AS T
            ) AS T1
        ) AS T2
    ) AS T3");
        }
        
        /// <Summary>
        /// return view for InfocenterModelStoreContainer.Tree
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterModelStoreContainer.Tree", @"
    SELECT VALUE -- Constructing Tree
        [InfocenterModel.Store.Tree](T1.Tree_ID, T1.Tree_maintree)
    FROM (
        SELECT 
            T.ID AS Tree_ID, 
            T.maintree AS Tree_maintree, 
            True AS _from0
        FROM InfocenterEntities.Trees AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for InfocenterEntities.Trees
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("InfocenterEntities.Trees", @"
    SELECT VALUE -- Constructing Trees
        [InfocenterModel.Tree](T1.Tree_ID, T1.Tree_maintree)
    FROM (
        SELECT 
            T.ID AS Tree_ID, 
            T.maintree AS Tree_maintree, 
            True AS _from0
        FROM InfocenterModelStoreContainer.Tree AS T
    ) AS T1");
        }
    }
}
